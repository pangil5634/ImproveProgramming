//  문제 내용
/*
    왕비를 피해 일곱 난쟁이들과 함께 평화롭게 생활하고 있던 백설공주에게 위기가 찾아왔다. 일과를 마치고 돌아온 난쟁이가 일곱 명이 아닌 아홉 명이었던 것이다.

    아홉 명의 난쟁이는 모두 자신이 "백설 공주와 일곱 난쟁이"의 주인공이라고 주장했다. 뛰어난 수학적 직관력을 가지고 있던 백설공주는, 다행스럽게도 일곱 난쟁이의 키의 합이 100이 됨을 기억해 냈다.

    아홉 난쟁이의 키가 주어졌을 때, 백설공주를 도와 일곱 난쟁이를 찾는 프로그램을 작성하시오.
*/

//  문제 분석
/*
    - 9명의 난쟁이.
    - 7명의 난쟁이 키의 합이 100.
*/

//  문제 조건

/*
    입력 : 아홉 개의 줄에 걸쳐 난쟁이들의 키가 주어진다. 주어지는 키는 100을 넘지 않는 자연수이며, 아홉 난쟁이의 키는 모두 다르며, 가능한 정답이 여러 가지인 경우에는 아무거나 출력한다.
    출력 : 일곱 난쟁이의 키를 오름차순으로 출력한다. 일곱 난쟁이를 찾을 수 없는 경우는 없다.
*/

//  예제 입력 및 출력
/*
    입력
    20
    7
    23
    19
    10
    15
    25
    8
    13

    출력
    7
    8
    10
    13
    19
    20
    23
*/

// 문제 풀이
/*
    - 목표 : 9개의 숫자 중 7개의 숫자를 합쳐서 100을 만들면 된다.
    - 7개 숫자의 합치 100이므로 2개의 숫자는 제외해야 한다.
    - 하나는 무조건 제외. 나머지 숫자 중 하나씩 제외한 합을 다 더하면서 100을 발견.
*/

const fs = require('fs');

// 입력을 한 줄씩 받아서 문자열 배열로 만들고, 각 줄을 숫자로 변환
const input = fs.readFileSync('/dev/stdin').toString().trim().split('\n');
const numbers = input.map(Number); // 숫자 9개가 들어옴

// 9명 중 2명을 제외하기 위한 이중 루프 (i < j 조합)
for (let i = 0; i < numbers.length; i++) {
    for (let j = i + 1; j < numbers.length; j++) {

        // i, j 번째 난쟁이를 제외한 나머지 7명을 추출
        const newArr = numbers.filter((_, idx) => idx !== i && idx !== j);

        // 7명 키의 총합 계산
        let total = 0;
        for (const number of newArr) {
            total += number;
        }

        // 합이 정확히 100이면 정답이므로 출력 후 프로그램 종료
        if (total === 100) {
            newArr.sort((a, b) => a - b);  // 키를 오름차순 정렬
            newArr.forEach((num) => console.log(num)); // 한 줄씩 출력
            process.exit(); // 정답 찾았으므로 프로그램 종료
        }
    }
}
