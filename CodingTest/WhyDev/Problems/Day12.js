//  문제 내용
/*
    정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.
        X가 3으로 나누어 떨어지면, 3으로 나눈다.
        X가 2로 나누어 떨어지면, 2로 나눈다.
        1을 뺀다.
    정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.
*/

//  문제 분석
/*
    - X가 3의 배수면 3으로 나눈다.
    - X가 2의 배수면 2로 나눈다.
    - 두 가지 경우가 다 아니면 1을 뺀다.
    - 연산을 사용하는 횟수의 최솟값
*/

//  문제 조건

/*
    입력
    - 첫째 줄에 1보다 크거나 같고, 106보다 작거나 같은 정수 N이 주어진다.
    
    출력
    - 첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.
*/

//  예제 입력 및 출력
/*
    입력1
    2
    출력1
    1

    입력2
    19
    출력2
    3
*/

// 문제 풀이
/*
    - 목표 : 주어진 X를 1로 만드는 최소한의 연산 횟수 구하기
    
*/


// 입력 처리
const fs = require('fs');
let input = Number(fs.readFileSync('/dev/stdin').toString().trim().split("\n"));

// 연산 횟수 변수
let count = 0;

// 연산 횟수 구하는 함수
function getCountMakeOne(size) {   

	// dp 선언 및 초기화
    const dp = [];
    dp[1] = 0; // 1은 연산횟수 0

	// 2부터 연산 횟수 계산 시작
    for (let i = 2; i <= size; i++){
        dp[i] = Math.min(
            (i % 3 === 0) ? dp[i / 3] : Infinity,
            (i % 2 === 0) ? dp[i / 2] : Infinity,
            dp[i - 1]
        ) + 1;
    }
	
    // 입력한 수의 연산횟수 반환
    return dp[size];
}

// 결과 출력
console.log(getCountMakeOne(input));